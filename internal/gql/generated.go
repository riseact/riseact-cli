// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// AppByClientIdQueryAppByClientIdApplication includes the requested fields of the GraphQL type Application.
type AppByClientIdQueryAppByClientIdApplication struct {
	Id                int                                                    `json:"id"`
	Name              string                                                 `json:"name"`
	Type              ApplicationType                                        `json:"type"`
	Organization      AppByClientIdQueryAppByClientIdApplicationOrganization `json:"organization"`
	AppUrl            string                                                 `json:"appUrl"`
	InstallUrl        string                                                 `json:"installUrl"`
	AuthorName        string                                                 `json:"authorName"`
	AuthorHomepageUrl string                                                 `json:"authorHomepageUrl"`
	RedirectUris      string                                                 `json:"redirectUris"`
	ClientId          string                                                 `json:"clientId"`
	ClientSecret      string                                                 `json:"clientSecret"`
}

// GetId returns AppByClientIdQueryAppByClientIdApplication.Id, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetId() int { return v.Id }

// GetName returns AppByClientIdQueryAppByClientIdApplication.Name, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetName() string { return v.Name }

// GetType returns AppByClientIdQueryAppByClientIdApplication.Type, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetType() ApplicationType { return v.Type }

// GetOrganization returns AppByClientIdQueryAppByClientIdApplication.Organization, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetOrganization() AppByClientIdQueryAppByClientIdApplicationOrganization {
	return v.Organization
}

// GetAppUrl returns AppByClientIdQueryAppByClientIdApplication.AppUrl, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetAppUrl() string { return v.AppUrl }

// GetInstallUrl returns AppByClientIdQueryAppByClientIdApplication.InstallUrl, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetInstallUrl() string { return v.InstallUrl }

// GetAuthorName returns AppByClientIdQueryAppByClientIdApplication.AuthorName, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetAuthorName() string { return v.AuthorName }

// GetAuthorHomepageUrl returns AppByClientIdQueryAppByClientIdApplication.AuthorHomepageUrl, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetAuthorHomepageUrl() string {
	return v.AuthorHomepageUrl
}

// GetRedirectUris returns AppByClientIdQueryAppByClientIdApplication.RedirectUris, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetRedirectUris() string { return v.RedirectUris }

// GetClientId returns AppByClientIdQueryAppByClientIdApplication.ClientId, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetClientId() string { return v.ClientId }

// GetClientSecret returns AppByClientIdQueryAppByClientIdApplication.ClientSecret, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplication) GetClientSecret() string { return v.ClientSecret }

// AppByClientIdQueryAppByClientIdApplicationOrganization includes the requested fields of the GraphQL type Organization.
type AppByClientIdQueryAppByClientIdApplicationOrganization struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

// GetId returns AppByClientIdQueryAppByClientIdApplicationOrganization.Id, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplicationOrganization) GetId() int { return v.Id }

// GetName returns AppByClientIdQueryAppByClientIdApplicationOrganization.Name, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryAppByClientIdApplicationOrganization) GetName() string { return v.Name }

// AppByClientIdQueryResponse is returned by AppByClientIdQuery on success.
type AppByClientIdQueryResponse struct {
	AppByClientId AppByClientIdQueryAppByClientIdApplication `json:"appByClientId"`
}

// GetAppByClientId returns AppByClientIdQueryResponse.AppByClientId, and is useful for accessing the field via an interface.
func (v *AppByClientIdQueryResponse) GetAppByClientId() AppByClientIdQueryAppByClientIdApplication {
	return v.AppByClientId
}

// AppByIdQueryAppApplication includes the requested fields of the GraphQL type Application.
type AppByIdQueryAppApplication struct {
	Id                int             `json:"id"`
	Name              string          `json:"name"`
	Type              ApplicationType `json:"type"`
	AppUrl            string          `json:"appUrl"`
	InstallUrl        string          `json:"installUrl"`
	AuthorName        string          `json:"authorName"`
	AuthorHomepageUrl string          `json:"authorHomepageUrl"`
	RedirectUris      string          `json:"redirectUris"`
	ClientId          string          `json:"clientId"`
	ClientSecret      string          `json:"clientSecret"`
}

// GetId returns AppByIdQueryAppApplication.Id, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetId() int { return v.Id }

// GetName returns AppByIdQueryAppApplication.Name, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetName() string { return v.Name }

// GetType returns AppByIdQueryAppApplication.Type, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetType() ApplicationType { return v.Type }

// GetAppUrl returns AppByIdQueryAppApplication.AppUrl, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetAppUrl() string { return v.AppUrl }

// GetInstallUrl returns AppByIdQueryAppApplication.InstallUrl, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetInstallUrl() string { return v.InstallUrl }

// GetAuthorName returns AppByIdQueryAppApplication.AuthorName, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetAuthorName() string { return v.AuthorName }

// GetAuthorHomepageUrl returns AppByIdQueryAppApplication.AuthorHomepageUrl, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetAuthorHomepageUrl() string { return v.AuthorHomepageUrl }

// GetRedirectUris returns AppByIdQueryAppApplication.RedirectUris, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetRedirectUris() string { return v.RedirectUris }

// GetClientId returns AppByIdQueryAppApplication.ClientId, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetClientId() string { return v.ClientId }

// GetClientSecret returns AppByIdQueryAppApplication.ClientSecret, and is useful for accessing the field via an interface.
func (v *AppByIdQueryAppApplication) GetClientSecret() string { return v.ClientSecret }

// AppByIdQueryResponse is returned by AppByIdQuery on success.
type AppByIdQueryResponse struct {
	App AppByIdQueryAppApplication `json:"app"`
}

// GetApp returns AppByIdQueryResponse.App, and is useful for accessing the field via an interface.
func (v *AppByIdQueryResponse) GetApp() AppByIdQueryAppApplication { return v.App }

// AppCreateMutationAppCreateApplicationResponse includes the requested fields of the GraphQL type ApplicationResponse.
type AppCreateMutationAppCreateApplicationResponse struct {
	App AppCreateMutationAppCreateApplicationResponseAppApplication `json:"app"`
}

// GetApp returns AppCreateMutationAppCreateApplicationResponse.App, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponse) GetApp() AppCreateMutationAppCreateApplicationResponseAppApplication {
	return v.App
}

// AppCreateMutationAppCreateApplicationResponseAppApplication includes the requested fields of the GraphQL type Application.
type AppCreateMutationAppCreateApplicationResponseAppApplication struct {
	Id                int             `json:"id"`
	Name              string          `json:"name"`
	Type              ApplicationType `json:"type"`
	AppUrl            string          `json:"appUrl"`
	InstallUrl        string          `json:"installUrl"`
	AuthorName        string          `json:"authorName"`
	AuthorHomepageUrl string          `json:"authorHomepageUrl"`
	RedirectUris      string          `json:"redirectUris"`
	ClientId          string          `json:"clientId"`
	ClientSecret      string          `json:"clientSecret"`
}

// GetId returns AppCreateMutationAppCreateApplicationResponseAppApplication.Id, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetId() int { return v.Id }

// GetName returns AppCreateMutationAppCreateApplicationResponseAppApplication.Name, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetName() string { return v.Name }

// GetType returns AppCreateMutationAppCreateApplicationResponseAppApplication.Type, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetType() ApplicationType {
	return v.Type
}

// GetAppUrl returns AppCreateMutationAppCreateApplicationResponseAppApplication.AppUrl, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetAppUrl() string {
	return v.AppUrl
}

// GetInstallUrl returns AppCreateMutationAppCreateApplicationResponseAppApplication.InstallUrl, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetInstallUrl() string {
	return v.InstallUrl
}

// GetAuthorName returns AppCreateMutationAppCreateApplicationResponseAppApplication.AuthorName, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetAuthorName() string {
	return v.AuthorName
}

// GetAuthorHomepageUrl returns AppCreateMutationAppCreateApplicationResponseAppApplication.AuthorHomepageUrl, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetAuthorHomepageUrl() string {
	return v.AuthorHomepageUrl
}

// GetRedirectUris returns AppCreateMutationAppCreateApplicationResponseAppApplication.RedirectUris, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetRedirectUris() string {
	return v.RedirectUris
}

// GetClientId returns AppCreateMutationAppCreateApplicationResponseAppApplication.ClientId, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetClientId() string {
	return v.ClientId
}

// GetClientSecret returns AppCreateMutationAppCreateApplicationResponseAppApplication.ClientSecret, and is useful for accessing the field via an interface.
func (v *AppCreateMutationAppCreateApplicationResponseAppApplication) GetClientSecret() string {
	return v.ClientSecret
}

// AppCreateMutationResponse is returned by AppCreateMutation on success.
type AppCreateMutationResponse struct {
	AppCreate AppCreateMutationAppCreateApplicationResponse `json:"appCreate"`
}

// GetAppCreate returns AppCreateMutationResponse.AppCreate, and is useful for accessing the field via an interface.
func (v *AppCreateMutationResponse) GetAppCreate() AppCreateMutationAppCreateApplicationResponse {
	return v.AppCreate
}

type AppInput struct {
	Name              string          `json:"name"`
	LogoId            int             `json:"logoId,omitempty"`
	Type              ApplicationType `json:"type"`
	RedirectUris      string          `json:"redirectUris"`
	Organization      int             `json:"organization"`
	AppUrl            string          `json:"appUrl"`
	InstallUrl        string          `json:"installUrl"`
	AuthorHomepageUrl string          `json:"authorHomepageUrl"`
	Description       string          `json:"description"`
}

// GetName returns AppInput.Name, and is useful for accessing the field via an interface.
func (v *AppInput) GetName() string { return v.Name }

// GetLogoId returns AppInput.LogoId, and is useful for accessing the field via an interface.
func (v *AppInput) GetLogoId() int { return v.LogoId }

// GetType returns AppInput.Type, and is useful for accessing the field via an interface.
func (v *AppInput) GetType() ApplicationType { return v.Type }

// GetRedirectUris returns AppInput.RedirectUris, and is useful for accessing the field via an interface.
func (v *AppInput) GetRedirectUris() string { return v.RedirectUris }

// GetOrganization returns AppInput.Organization, and is useful for accessing the field via an interface.
func (v *AppInput) GetOrganization() int { return v.Organization }

// GetAppUrl returns AppInput.AppUrl, and is useful for accessing the field via an interface.
func (v *AppInput) GetAppUrl() string { return v.AppUrl }

// GetInstallUrl returns AppInput.InstallUrl, and is useful for accessing the field via an interface.
func (v *AppInput) GetInstallUrl() string { return v.InstallUrl }

// GetAuthorHomepageUrl returns AppInput.AuthorHomepageUrl, and is useful for accessing the field via an interface.
func (v *AppInput) GetAuthorHomepageUrl() string { return v.AuthorHomepageUrl }

// GetDescription returns AppInput.Description, and is useful for accessing the field via an interface.
func (v *AppInput) GetDescription() string { return v.Description }

// AppSearchQueryAppsApplicationConnection includes the requested fields of the GraphQL type ApplicationConnection.
type AppSearchQueryAppsApplicationConnection struct {
	Edges []AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge `json:"edges"`
}

// GetEdges returns AppSearchQueryAppsApplicationConnection.Edges, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnection) GetEdges() []AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge {
	return v.Edges
}

// AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge includes the requested fields of the GraphQL type ApplicationEdge.
type AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge struct {
	Node AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication `json:"node"`
}

// GetNode returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge.Node, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdge) GetNode() AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication {
	return v.Node
}

// AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication includes the requested fields of the GraphQL type Application.
type AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication struct {
	Id                int             `json:"id"`
	Name              string          `json:"name"`
	Type              ApplicationType `json:"type"`
	AppUrl            string          `json:"appUrl"`
	InstallUrl        string          `json:"installUrl"`
	AuthorName        string          `json:"authorName"`
	AuthorHomepageUrl string          `json:"authorHomepageUrl"`
	RedirectUris      string          `json:"redirectUris"`
	ClientId          string          `json:"clientId"`
	ClientSecret      string          `json:"clientSecret"`
}

// GetId returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.Id, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetId() int {
	return v.Id
}

// GetName returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.Name, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetName() string {
	return v.Name
}

// GetType returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.Type, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetType() ApplicationType {
	return v.Type
}

// GetAppUrl returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.AppUrl, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetAppUrl() string {
	return v.AppUrl
}

// GetInstallUrl returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.InstallUrl, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetInstallUrl() string {
	return v.InstallUrl
}

// GetAuthorName returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.AuthorName, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetAuthorName() string {
	return v.AuthorName
}

// GetAuthorHomepageUrl returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.AuthorHomepageUrl, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetAuthorHomepageUrl() string {
	return v.AuthorHomepageUrl
}

// GetRedirectUris returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.RedirectUris, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetRedirectUris() string {
	return v.RedirectUris
}

// GetClientId returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.ClientId, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetClientId() string {
	return v.ClientId
}

// GetClientSecret returns AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication.ClientSecret, and is useful for accessing the field via an interface.
func (v *AppSearchQueryAppsApplicationConnectionEdgesApplicationEdgeNodeApplication) GetClientSecret() string {
	return v.ClientSecret
}

// AppSearchQueryResponse is returned by AppSearchQuery on success.
type AppSearchQueryResponse struct {
	Apps AppSearchQueryAppsApplicationConnection `json:"apps"`
}

// GetApps returns AppSearchQueryResponse.Apps, and is useful for accessing the field via an interface.
func (v *AppSearchQueryResponse) GetApps() AppSearchQueryAppsApplicationConnection { return v.Apps }

type ApplicationType string

const (
	ApplicationTypePublic  ApplicationType = "PUBLIC"
	ApplicationTypePrivate ApplicationType = "PRIVATE"
)

// AssetCreateAssetCreateAsset includes the requested fields of the GraphQL type Asset.
type AssetCreateAssetCreateAsset struct {
	Id          int    `json:"id"`
	Key         string `json:"key"`
	Checksum    string `json:"checksum"`
	ContentType string `json:"contentType"`
	Value       string `json:"value"`
	Attachment  string `json:"attachment"`
	Size        int    `json:"size"`
	UpdatedAt   string `json:"updatedAt"`
	CreatedAt   string `json:"createdAt"`
}

// GetId returns AssetCreateAssetCreateAsset.Id, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetId() int { return v.Id }

// GetKey returns AssetCreateAssetCreateAsset.Key, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetKey() string { return v.Key }

// GetChecksum returns AssetCreateAssetCreateAsset.Checksum, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetChecksum() string { return v.Checksum }

// GetContentType returns AssetCreateAssetCreateAsset.ContentType, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetContentType() string { return v.ContentType }

// GetValue returns AssetCreateAssetCreateAsset.Value, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetValue() string { return v.Value }

// GetAttachment returns AssetCreateAssetCreateAsset.Attachment, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetAttachment() string { return v.Attachment }

// GetSize returns AssetCreateAssetCreateAsset.Size, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetSize() int { return v.Size }

// GetUpdatedAt returns AssetCreateAssetCreateAsset.UpdatedAt, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetUpdatedAt() string { return v.UpdatedAt }

// GetCreatedAt returns AssetCreateAssetCreateAsset.CreatedAt, and is useful for accessing the field via an interface.
func (v *AssetCreateAssetCreateAsset) GetCreatedAt() string { return v.CreatedAt }

// AssetCreateResponse is returned by AssetCreate on success.
type AssetCreateResponse struct {
	AssetCreate AssetCreateAssetCreateAsset `json:"assetCreate"`
}

// GetAssetCreate returns AssetCreateResponse.AssetCreate, and is useful for accessing the field via an interface.
func (v *AssetCreateResponse) GetAssetCreate() AssetCreateAssetCreateAsset { return v.AssetCreate }

// AssetDeleteAssetDeleteAsset includes the requested fields of the GraphQL type Asset.
type AssetDeleteAssetDeleteAsset struct {
	Id int `json:"id"`
}

// GetId returns AssetDeleteAssetDeleteAsset.Id, and is useful for accessing the field via an interface.
func (v *AssetDeleteAssetDeleteAsset) GetId() int { return v.Id }

// AssetDeleteResponse is returned by AssetDelete on success.
type AssetDeleteResponse struct {
	AssetDelete AssetDeleteAssetDeleteAsset `json:"assetDelete"`
}

// GetAssetDelete returns AssetDeleteResponse.AssetDelete, and is useful for accessing the field via an interface.
func (v *AssetDeleteResponse) GetAssetDelete() AssetDeleteAssetDeleteAsset { return v.AssetDelete }

type AssetInput struct {
	Key         string `json:"key"`
	ThemeId     int    `json:"themeId"`
	ContentType string `json:"contentType"`
	Value       string `json:"value"`
	Attachment  string `json:"attachment"`
}

// GetKey returns AssetInput.Key, and is useful for accessing the field via an interface.
func (v *AssetInput) GetKey() string { return v.Key }

// GetThemeId returns AssetInput.ThemeId, and is useful for accessing the field via an interface.
func (v *AssetInput) GetThemeId() int { return v.ThemeId }

// GetContentType returns AssetInput.ContentType, and is useful for accessing the field via an interface.
func (v *AssetInput) GetContentType() string { return v.ContentType }

// GetValue returns AssetInput.Value, and is useful for accessing the field via an interface.
func (v *AssetInput) GetValue() string { return v.Value }

// GetAttachment returns AssetInput.Attachment, and is useful for accessing the field via an interface.
func (v *AssetInput) GetAttachment() string { return v.Attachment }

// AssetUpdateAssetUpdateAsset includes the requested fields of the GraphQL type Asset.
type AssetUpdateAssetUpdateAsset struct {
	Id          int    `json:"id"`
	Key         string `json:"key"`
	Checksum    string `json:"checksum"`
	ContentType string `json:"contentType"`
	Value       string `json:"value"`
	Attachment  string `json:"attachment"`
	Size        int    `json:"size"`
	UpdatedAt   string `json:"updatedAt"`
	CreatedAt   string `json:"createdAt"`
}

// GetId returns AssetUpdateAssetUpdateAsset.Id, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetId() int { return v.Id }

// GetKey returns AssetUpdateAssetUpdateAsset.Key, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetKey() string { return v.Key }

// GetChecksum returns AssetUpdateAssetUpdateAsset.Checksum, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetChecksum() string { return v.Checksum }

// GetContentType returns AssetUpdateAssetUpdateAsset.ContentType, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetContentType() string { return v.ContentType }

// GetValue returns AssetUpdateAssetUpdateAsset.Value, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetValue() string { return v.Value }

// GetAttachment returns AssetUpdateAssetUpdateAsset.Attachment, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetAttachment() string { return v.Attachment }

// GetSize returns AssetUpdateAssetUpdateAsset.Size, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetSize() int { return v.Size }

// GetUpdatedAt returns AssetUpdateAssetUpdateAsset.UpdatedAt, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetUpdatedAt() string { return v.UpdatedAt }

// GetCreatedAt returns AssetUpdateAssetUpdateAsset.CreatedAt, and is useful for accessing the field via an interface.
func (v *AssetUpdateAssetUpdateAsset) GetCreatedAt() string { return v.CreatedAt }

// AssetUpdateResponse is returned by AssetUpdate on success.
type AssetUpdateResponse struct {
	AssetUpdate AssetUpdateAssetUpdateAsset `json:"assetUpdate"`
}

// GetAssetUpdate returns AssetUpdateResponse.AssetUpdate, and is useful for accessing the field via an interface.
func (v *AssetUpdateResponse) GetAssetUpdate() AssetUpdateAssetUpdateAsset { return v.AssetUpdate }

// GetPartnerPartner includes the requested fields of the GraphQL type Partner.
type GetPartnerPartner struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetPartnerPartner.Id, and is useful for accessing the field via an interface.
func (v *GetPartnerPartner) GetId() int { return v.Id }

// GetName returns GetPartnerPartner.Name, and is useful for accessing the field via an interface.
func (v *GetPartnerPartner) GetName() string { return v.Name }

// GetPartnerResponse is returned by GetPartner on success.
type GetPartnerResponse struct {
	Partner GetPartnerPartner `json:"partner"`
}

// GetPartner returns GetPartnerResponse.Partner, and is useful for accessing the field via an interface.
func (v *GetPartnerResponse) GetPartner() GetPartnerPartner { return v.Partner }

// OrganizationSearchOrganizationsOrganizationConnection includes the requested fields of the GraphQL type OrganizationConnection.
type OrganizationSearchOrganizationsOrganizationConnection struct {
	Edges []OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge `json:"edges"`
}

// GetEdges returns OrganizationSearchOrganizationsOrganizationConnection.Edges, and is useful for accessing the field via an interface.
func (v *OrganizationSearchOrganizationsOrganizationConnection) GetEdges() []OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge {
	return v.Edges
}

// OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge includes the requested fields of the GraphQL type OrganizationEdge.
type OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge struct {
	Node OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization `json:"node"`
}

// GetNode returns OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge.Node, and is useful for accessing the field via an interface.
func (v *OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdge) GetNode() OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization {
	return v.Node
}

// OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization includes the requested fields of the GraphQL type Organization.
type OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

// GetId returns OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization.Id, and is useful for accessing the field via an interface.
func (v *OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization) GetId() int {
	return v.Id
}

// GetName returns OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization.Name, and is useful for accessing the field via an interface.
func (v *OrganizationSearchOrganizationsOrganizationConnectionEdgesOrganizationEdgeNodeOrganization) GetName() string {
	return v.Name
}

// OrganizationSearchResponse is returned by OrganizationSearch on success.
type OrganizationSearchResponse struct {
	Organizations OrganizationSearchOrganizationsOrganizationConnection `json:"organizations"`
}

// GetOrganizations returns OrganizationSearchResponse.Organizations, and is useful for accessing the field via an interface.
func (v *OrganizationSearchResponse) GetOrganizations() OrganizationSearchOrganizationsOrganizationConnection {
	return v.Organizations
}

// RedirectUriMutationAppUpdateRedirectUrisApplicationResponse includes the requested fields of the GraphQL type ApplicationResponse.
type RedirectUriMutationAppUpdateRedirectUrisApplicationResponse struct {
	App RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication `json:"app"`
}

// GetApp returns RedirectUriMutationAppUpdateRedirectUrisApplicationResponse.App, and is useful for accessing the field via an interface.
func (v *RedirectUriMutationAppUpdateRedirectUrisApplicationResponse) GetApp() RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication {
	return v.App
}

// RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication includes the requested fields of the GraphQL type Application.
type RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication struct {
	Id           int    `json:"id"`
	RedirectUris string `json:"redirectUris"`
}

// GetId returns RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication.Id, and is useful for accessing the field via an interface.
func (v *RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication) GetId() int {
	return v.Id
}

// GetRedirectUris returns RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication.RedirectUris, and is useful for accessing the field via an interface.
func (v *RedirectUriMutationAppUpdateRedirectUrisApplicationResponseAppApplication) GetRedirectUris() string {
	return v.RedirectUris
}

// RedirectUriMutationResponse is returned by RedirectUriMutation on success.
type RedirectUriMutationResponse struct {
	AppUpdateRedirectUris RedirectUriMutationAppUpdateRedirectUrisApplicationResponse `json:"appUpdateRedirectUris"`
}

// GetAppUpdateRedirectUris returns RedirectUriMutationResponse.AppUpdateRedirectUris, and is useful for accessing the field via an interface.
func (v *RedirectUriMutationResponse) GetAppUpdateRedirectUris() RedirectUriMutationAppUpdateRedirectUrisApplicationResponse {
	return v.AppUpdateRedirectUris
}

// ThemeDeleteResponse is returned by ThemeDelete on success.
type ThemeDeleteResponse struct {
	ThemeDelete ThemeDeleteThemeDeleteTheme `json:"themeDelete"`
}

// GetThemeDelete returns ThemeDeleteResponse.ThemeDelete, and is useful for accessing the field via an interface.
func (v *ThemeDeleteResponse) GetThemeDelete() ThemeDeleteThemeDeleteTheme { return v.ThemeDelete }

// ThemeDeleteThemeDeleteTheme includes the requested fields of the GraphQL type Theme.
type ThemeDeleteThemeDeleteTheme struct {
	Id int `json:"id"`
}

// GetId returns ThemeDeleteThemeDeleteTheme.Id, and is useful for accessing the field via an interface.
func (v *ThemeDeleteThemeDeleteTheme) GetId() int { return v.Id }

// ThemeListResponse is returned by ThemeList on success.
type ThemeListResponse struct {
	Themes ThemeListThemesThemeConnection `json:"themes"`
}

// GetThemes returns ThemeListResponse.Themes, and is useful for accessing the field via an interface.
func (v *ThemeListResponse) GetThemes() ThemeListThemesThemeConnection { return v.Themes }

// ThemeListThemesThemeConnection includes the requested fields of the GraphQL type ThemeConnection.
type ThemeListThemesThemeConnection struct {
	Edges []ThemeListThemesThemeConnectionEdgesThemeEdge `json:"edges"`
}

// GetEdges returns ThemeListThemesThemeConnection.Edges, and is useful for accessing the field via an interface.
func (v *ThemeListThemesThemeConnection) GetEdges() []ThemeListThemesThemeConnectionEdgesThemeEdge {
	return v.Edges
}

// ThemeListThemesThemeConnectionEdgesThemeEdge includes the requested fields of the GraphQL type ThemeEdge.
type ThemeListThemesThemeConnectionEdgesThemeEdge struct {
	Node ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme `json:"node"`
}

// GetNode returns ThemeListThemesThemeConnectionEdgesThemeEdge.Node, and is useful for accessing the field via an interface.
func (v *ThemeListThemesThemeConnectionEdgesThemeEdge) GetNode() ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme {
	return v.Node
}

// ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme includes the requested fields of the GraphQL type Theme.
type ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
	Uuid string `json:"uuid"`
}

// GetId returns ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme.Id, and is useful for accessing the field via an interface.
func (v *ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme) GetId() int { return v.Id }

// GetName returns ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme.Name, and is useful for accessing the field via an interface.
func (v *ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme) GetName() string { return v.Name }

// GetUuid returns ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme.Uuid, and is useful for accessing the field via an interface.
func (v *ThemeListThemesThemeConnectionEdgesThemeEdgeNodeTheme) GetUuid() string { return v.Uuid }

// ThemePreviewResponse is returned by ThemePreview on success.
type ThemePreviewResponse struct {
	ThemePreview ThemePreviewThemePreview `json:"themePreview"`
}

// GetThemePreview returns ThemePreviewResponse.ThemePreview, and is useful for accessing the field via an interface.
func (v *ThemePreviewResponse) GetThemePreview() ThemePreviewThemePreview { return v.ThemePreview }

// ThemePreviewThemePreview includes the requested fields of the GraphQL type ThemePreview.
type ThemePreviewThemePreview struct {
	Id         int    `json:"id"`
	PreviewUrl string `json:"previewUrl"`
	AdminUrl   string `json:"adminUrl"`
}

// GetId returns ThemePreviewThemePreview.Id, and is useful for accessing the field via an interface.
func (v *ThemePreviewThemePreview) GetId() int { return v.Id }

// GetPreviewUrl returns ThemePreviewThemePreview.PreviewUrl, and is useful for accessing the field via an interface.
func (v *ThemePreviewThemePreview) GetPreviewUrl() string { return v.PreviewUrl }

// GetAdminUrl returns ThemePreviewThemePreview.AdminUrl, and is useful for accessing the field via an interface.
func (v *ThemePreviewThemePreview) GetAdminUrl() string { return v.AdminUrl }

// __AppByClientIdQueryInput is used internally by genqlient
type __AppByClientIdQueryInput struct {
	ClientId string `json:"clientId"`
}

// GetClientId returns __AppByClientIdQueryInput.ClientId, and is useful for accessing the field via an interface.
func (v *__AppByClientIdQueryInput) GetClientId() string { return v.ClientId }

// __AppByIdQueryInput is used internally by genqlient
type __AppByIdQueryInput struct {
	Id int `json:"id"`
}

// GetId returns __AppByIdQueryInput.Id, and is useful for accessing the field via an interface.
func (v *__AppByIdQueryInput) GetId() int { return v.Id }

// __AppCreateMutationInput is used internally by genqlient
type __AppCreateMutationInput struct {
	Input AppInput `json:"input"`
}

// GetInput returns __AppCreateMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__AppCreateMutationInput) GetInput() AppInput { return v.Input }

// __AssetCreateInput is used internally by genqlient
type __AssetCreateInput struct {
	Input AssetInput `json:"input"`
}

// GetInput returns __AssetCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__AssetCreateInput) GetInput() AssetInput { return v.Input }

// __AssetDeleteInput is used internally by genqlient
type __AssetDeleteInput struct {
	ThemeId int    `json:"themeId"`
	Key     string `json:"key"`
}

// GetThemeId returns __AssetDeleteInput.ThemeId, and is useful for accessing the field via an interface.
func (v *__AssetDeleteInput) GetThemeId() int { return v.ThemeId }

// GetKey returns __AssetDeleteInput.Key, and is useful for accessing the field via an interface.
func (v *__AssetDeleteInput) GetKey() string { return v.Key }

// __AssetUpdateInput is used internally by genqlient
type __AssetUpdateInput struct {
	ThemeId int        `json:"themeId"`
	Input   AssetInput `json:"input"`
}

// GetThemeId returns __AssetUpdateInput.ThemeId, and is useful for accessing the field via an interface.
func (v *__AssetUpdateInput) GetThemeId() int { return v.ThemeId }

// GetInput returns __AssetUpdateInput.Input, and is useful for accessing the field via an interface.
func (v *__AssetUpdateInput) GetInput() AssetInput { return v.Input }

// __RedirectUriMutationInput is used internally by genqlient
type __RedirectUriMutationInput struct {
	Id           int    `json:"id"`
	RedirectUris string `json:"redirectUris"`
}

// GetId returns __RedirectUriMutationInput.Id, and is useful for accessing the field via an interface.
func (v *__RedirectUriMutationInput) GetId() int { return v.Id }

// GetRedirectUris returns __RedirectUriMutationInput.RedirectUris, and is useful for accessing the field via an interface.
func (v *__RedirectUriMutationInput) GetRedirectUris() string { return v.RedirectUris }

// __ThemeDeleteInput is used internally by genqlient
type __ThemeDeleteInput struct {
	Id int `json:"id"`
}

// GetId returns __ThemeDeleteInput.Id, and is useful for accessing the field via an interface.
func (v *__ThemeDeleteInput) GetId() int { return v.Id }

// __ThemePreviewInput is used internally by genqlient
type __ThemePreviewInput struct {
	ThemeId        int `json:"themeId"`
	OrganizationId int `json:"organizationId"`
}

// GetThemeId returns __ThemePreviewInput.ThemeId, and is useful for accessing the field via an interface.
func (v *__ThemePreviewInput) GetThemeId() int { return v.ThemeId }

// GetOrganizationId returns __ThemePreviewInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__ThemePreviewInput) GetOrganizationId() int { return v.OrganizationId }

// The query or mutation executed by AppByClientIdQuery.
const AppByClientIdQuery_Operation = `
query AppByClientIdQuery ($clientId: String!) {
	appByClientId(clientId: $clientId) {
		id
		name
		type
		organization {
			id
			name
		}
		appUrl
		installUrl
		authorName
		authorHomepageUrl
		redirectUris
		clientId
		clientSecret
	}
}
`

func AppByClientIdQuery(
	ctx context.Context,
	client graphql.Client,
	clientId string,
) (*AppByClientIdQueryResponse, error) {
	req := &graphql.Request{
		OpName: "AppByClientIdQuery",
		Query:  AppByClientIdQuery_Operation,
		Variables: &__AppByClientIdQueryInput{
			ClientId: clientId,
		},
	}
	var err error

	var data AppByClientIdQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AppByIdQuery.
const AppByIdQuery_Operation = `
query AppByIdQuery ($id: Int!) {
	app(id: $id) {
		id
		name
		type
		appUrl
		installUrl
		authorName
		authorHomepageUrl
		redirectUris
		clientId
		clientSecret
	}
}
`

func AppByIdQuery(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*AppByIdQueryResponse, error) {
	req := &graphql.Request{
		OpName: "AppByIdQuery",
		Query:  AppByIdQuery_Operation,
		Variables: &__AppByIdQueryInput{
			Id: id,
		},
	}
	var err error

	var data AppByIdQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AppCreateMutation.
const AppCreateMutation_Operation = `
mutation AppCreateMutation ($input: AppInput!) {
	appCreate(data: $input) {
		app {
			id
			name
			type
			appUrl
			installUrl
			authorName
			authorHomepageUrl
			redirectUris
			clientId
			clientSecret
		}
	}
}
`

func AppCreateMutation(
	ctx context.Context,
	client graphql.Client,
	input AppInput,
) (*AppCreateMutationResponse, error) {
	req := &graphql.Request{
		OpName: "AppCreateMutation",
		Query:  AppCreateMutation_Operation,
		Variables: &__AppCreateMutationInput{
			Input: input,
		},
	}
	var err error

	var data AppCreateMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AppSearchQuery.
const AppSearchQuery_Operation = `
query AppSearchQuery {
	apps {
		edges {
			node {
				id
				name
				type
				appUrl
				installUrl
				authorName
				authorHomepageUrl
				redirectUris
				clientId
				clientSecret
			}
		}
	}
}
`

func AppSearchQuery(
	ctx context.Context,
	client graphql.Client,
) (*AppSearchQueryResponse, error) {
	req := &graphql.Request{
		OpName: "AppSearchQuery",
		Query:  AppSearchQuery_Operation,
	}
	var err error

	var data AppSearchQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AssetCreate.
const AssetCreate_Operation = `
mutation AssetCreate ($input: AssetInput!) {
	assetCreate(data: $input) {
		id
		key
		checksum
		contentType
		value
		attachment
		size
		updatedAt
		createdAt
	}
}
`

func AssetCreate(
	ctx context.Context,
	client graphql.Client,
	input AssetInput,
) (*AssetCreateResponse, error) {
	req := &graphql.Request{
		OpName: "AssetCreate",
		Query:  AssetCreate_Operation,
		Variables: &__AssetCreateInput{
			Input: input,
		},
	}
	var err error

	var data AssetCreateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AssetDelete.
const AssetDelete_Operation = `
mutation AssetDelete ($themeId: Int!, $key: String!) {
	assetDelete(themeId: $themeId, key: $key) {
		id
	}
}
`

func AssetDelete(
	ctx context.Context,
	client graphql.Client,
	themeId int,
	key string,
) (*AssetDeleteResponse, error) {
	req := &graphql.Request{
		OpName: "AssetDelete",
		Query:  AssetDelete_Operation,
		Variables: &__AssetDeleteInput{
			ThemeId: themeId,
			Key:     key,
		},
	}
	var err error

	var data AssetDeleteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by AssetUpdate.
const AssetUpdate_Operation = `
mutation AssetUpdate ($themeId: Int!, $input: AssetInput!) {
	assetUpdate(themeId: $themeId, data: $input) {
		id
		key
		checksum
		contentType
		value
		attachment
		size
		updatedAt
		createdAt
	}
}
`

func AssetUpdate(
	ctx context.Context,
	client graphql.Client,
	themeId int,
	input AssetInput,
) (*AssetUpdateResponse, error) {
	req := &graphql.Request{
		OpName: "AssetUpdate",
		Query:  AssetUpdate_Operation,
		Variables: &__AssetUpdateInput{
			ThemeId: themeId,
			Input:   input,
		},
	}
	var err error

	var data AssetUpdateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPartner.
const GetPartner_Operation = `
query GetPartner {
	partner {
		id
		name
	}
}
`

func GetPartner(
	ctx context.Context,
	client graphql.Client,
) (*GetPartnerResponse, error) {
	req := &graphql.Request{
		OpName: "GetPartner",
		Query:  GetPartner_Operation,
	}
	var err error

	var data GetPartnerResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by OrganizationSearch.
const OrganizationSearch_Operation = `
query OrganizationSearch {
	organizations {
		edges {
			node {
				id
				name
			}
		}
	}
}
`

func OrganizationSearch(
	ctx context.Context,
	client graphql.Client,
) (*OrganizationSearchResponse, error) {
	req := &graphql.Request{
		OpName: "OrganizationSearch",
		Query:  OrganizationSearch_Operation,
	}
	var err error

	var data OrganizationSearchResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by RedirectUriMutation.
const RedirectUriMutation_Operation = `
mutation RedirectUriMutation ($id: Int!, $redirectUris: String!) {
	appUpdateRedirectUris(id: $id, redirectUris: $redirectUris) {
		app {
			id
			redirectUris
		}
	}
}
`

func RedirectUriMutation(
	ctx context.Context,
	client graphql.Client,
	id int,
	redirectUris string,
) (*RedirectUriMutationResponse, error) {
	req := &graphql.Request{
		OpName: "RedirectUriMutation",
		Query:  RedirectUriMutation_Operation,
		Variables: &__RedirectUriMutationInput{
			Id:           id,
			RedirectUris: redirectUris,
		},
	}
	var err error

	var data RedirectUriMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by ThemeDelete.
const ThemeDelete_Operation = `
mutation ThemeDelete ($id: Int!) {
	themeDelete(id: $id) {
		id
	}
}
`

func ThemeDelete(
	ctx context.Context,
	client graphql.Client,
	id int,
) (*ThemeDeleteResponse, error) {
	req := &graphql.Request{
		OpName: "ThemeDelete",
		Query:  ThemeDelete_Operation,
		Variables: &__ThemeDeleteInput{
			Id: id,
		},
	}
	var err error

	var data ThemeDeleteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by ThemeList.
const ThemeList_Operation = `
query ThemeList {
	themes {
		edges {
			node {
				id
				name
				uuid
			}
		}
	}
}
`

func ThemeList(
	ctx context.Context,
	client graphql.Client,
) (*ThemeListResponse, error) {
	req := &graphql.Request{
		OpName: "ThemeList",
		Query:  ThemeList_Operation,
	}
	var err error

	var data ThemeListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by ThemePreview.
const ThemePreview_Operation = `
mutation ThemePreview ($themeId: Int!, $organizationId: Int!) {
	themePreview(themeId: $themeId, organizationId: $organizationId) {
		id
		previewUrl
		adminUrl
	}
}
`

func ThemePreview(
	ctx context.Context,
	client graphql.Client,
	themeId int,
	organizationId int,
) (*ThemePreviewResponse, error) {
	req := &graphql.Request{
		OpName: "ThemePreview",
		Query:  ThemePreview_Operation,
		Variables: &__ThemePreviewInput{
			ThemeId:        themeId,
			OrganizationId: organizationId,
		},
	}
	var err error

	var data ThemePreviewResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
